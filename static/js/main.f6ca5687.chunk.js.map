{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchMonster","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAaeA,EAXF,SAACC,GACV,OACI,sBAAKC,UAAU,wIAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACR,oBAAGH,UAAU,yBAAb,cAA+DD,EAAMG,QAAQE,OAAlCL,EAAMG,QAAQC,IAEzD,mBAAGH,UAAU,yCAAb,SAAuDD,EAAMG,QAAQG,YCIlEC,EAVE,SAACP,GACd,OACI,mCACKA,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAMA,QAASA,UCGhBO,EAPG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9B,OACI,uBAAOC,KAAK,OAAOZ,UAAU,iJAAiJU,YAAaA,EACvLG,SAAUF,KCoCPG,EApCf,kDACI,aAAe,IAAD,8BACV,gBAWJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAAEC,cAAeF,EAAEG,OAAOC,SAXxC,EAAKC,MAAQ,CACTb,SAAU,GACVU,cAAe,IAJT,EADlB,qDASI,WAAqB,IAAD,OAChBI,MAAM,+CAA+CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,SAVvI,oBAiBI,WACI,MAAoCC,KAAKN,MAAjCb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,cACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC5CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAcY,kBAEtD,OACI,sBAAK7B,UAAU,gCAAf,UACI,oBAAIA,UAAU,kEAAd,8BACA,qBAAKA,UAAU,2BAAf,SACI,cAAC,EAAD,CAAWU,YAAY,mBAAmBC,aAAce,KAAKf,iBAEjE,qBAAKX,UAAU,6BAAf,SACI,cAAC,EAAD,CAAUO,SAAUoB,aA7BxC,GAAyBI,aCOVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f6ca5687.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = (props) => {\n    return (\n        <div className=\"bg-gray-200 p-2 h-80 flex flex-col justify-center items-center transition transform hover:scale-110 duration-200 rounded-lg shadow-lg\">\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n            <p className=\"text-gray-600 text-2xl\" key={props.monster.id}> {props.monster.name}\n            </p>\n            <p className=\"text-green-400 text-normal font-medium\">{props.monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from '../card/card.component'\nconst CardList = (props) => {\n    return (\n        <>\n            {props.monsters.map(monster => (\n                <Card monster={monster} />\n            ))}\n        </>\n    )\n}\n\nexport default CardList\n","import React from 'react'\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n    return (\n        <input type=\"text\" className=\"border border-gray-400 px-2 py-3 rounded-lg text-gray-700 text-base font-medium focus:outline-none focus:border-green-500 placeholder-gray-600\" placeholder={placeholder}\n            onChange={handleChange} />\n    )\n}\n\nexport default SearchBox\n","import './App.css';\nimport CardList from './components/card-list/card-list.component'\nimport React, { Component } from 'react'\nimport SearchBox from './components/search-box/search-box.component'\n\nexport class App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchMonster: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users/').then(response => response.json()).then(users => this.setState({ monsters: users }))\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchMonster: e.target.value })\n    }\n\n    render() {\n        const { monsters, searchMonster } = this.state;\n        const filteredMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchMonster.toLowerCase())\n        )\n        return ( \n            <div className=\"container mx-auto px-10 py-10\">\n                <h1 className=\"text-7xl flex justify-center mb-4 text-green-500 font-extrabold\">Monster Bigbused</h1>\n                <div className=\"flex justify-center mb-4\">\n                    <SearchBox placeholder=\"search a monster\" handleChange={this.handleChange} />\n                </div>\n                <div className=\"App grid grid-cols-4 gap-8\">\n                    <CardList monsters={filteredMonsters} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}